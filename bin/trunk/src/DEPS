vars = {
  "chromium_trunk":
    "http://src.chromium.org/svn/trunk",
  "chromium_revision": "@49687",
  "chromium_deps_root": "src/third_party/chromium",
}

deps = {

  # Fetch chromium DEPS so we can sync our other dependencies relative
  # to it.
  "src/third_party/chromium":
    File(Var("chromium_trunk") + "/src/DEPS" + Var("chromium_revision")),

  # Fetch the subset of chromium src that we depend on.
  # TODO(bmcquade): see if we can reduce this set of dependencies.
  "src/app":
    Var("chromium_trunk") + "/src/app" + Var("chromium_revision"),
  "src/base":
    Var("chromium_trunk") + "/src/base" + Var("chromium_revision"),
  "src/build/linux":
    Var("chromium_trunk") + "/src/build/linux" + Var("chromium_revision"),
  "src/build/mac":
    Var("chromium_trunk") + "/src/build/mac" + Var("chromium_revision"),
  "src/build/win":
    Var("chromium_trunk") + "/src/build/win" + Var("chromium_revision"),
  "src/build/temp_gyp":
    Var("chromium_trunk") + "/src/build/temp_gyp" + Var("chromium_revision"),
  "src/build/util":
    Var("chromium_trunk") + "/src/build/util" + Var("chromium_revision"),
  "src/build/internal":
    Var("chromium_trunk") + "/src/build/internal" + Var("chromium_revision"),
  "src/chrome/browser/sync/protocol":
    Var("chromium_trunk") + "/src/chrome/browser/sync/protocol" +
      Var("chromium_revision"),
  "src/gfx":
    Var("chromium_trunk") + "/src/gfx" + Var("chromium_revision"),
  "src/gpu":
    Var("chromium_trunk") + "/src/gpu" + Var("chromium_revision"),
  "src/media":
    Var("chromium_trunk") + "/src/media" + Var("chromium_revision"),
  "src/net":
    Var("chromium_trunk") + "/src/net" + Var("chromium_revision"),
  "src/sdch":
    Var("chromium_trunk") + "/src/sdch" + Var("chromium_revision"),
  "src/skia":
    Var("chromium_trunk") + "/src/skia" + Var("chromium_revision"),
  "src/testing":
    Var("chromium_trunk") + "/src/testing" + Var("chromium_revision"),
  "src/tools":
    Var("chromium_trunk") + "/src/tools" + Var("chromium_revision"),
  "src/third_party/glew":
    Var("chromium_trunk") + "/src/third_party/glew" + Var("chromium_revision"),
  "src/third_party/harfbuzz":
    Var("chromium_trunk") + "/src/third_party/harfbuzz" + Var("chromium_revision"),
  "src/third_party/libevent":
    Var("chromium_trunk") + "/src/third_party/libevent" + Var("chromium_revision"),
  "src/third_party/libjpeg":
    Var("chromium_trunk") + "/src/third_party/libjpeg" + Var("chromium_revision"),
  "src/third_party/libpng":
    Var("chromium_trunk") + "/src/third_party/libpng" + Var("chromium_revision"),
  "src/third_party/libxml":
    Var("chromium_trunk") + "/src/third_party/libxml" + Var("chromium_revision"),
  "src/third_party/libxslt":
    Var("chromium_trunk") + "/src/third_party/libxslt" + Var("chromium_revision"),
  "src/third_party/mesa":
    Var("chromium_trunk") + "/src/third_party/mesa" + Var("chromium_revision"),
  "src/third_party/modp_b64":
    Var("chromium_trunk") + "/src/third_party/modp_b64" + Var("chromium_revision"),
  "src/third_party/npapi":
    Var("chromium_trunk") + "/src/third_party/npapi" + Var("chromium_revision"),
  "src/third_party/openmax":
    Var("chromium_trunk") + "/src/third_party/openmax" + Var("chromium_revision"),
  "src/third_party/protobuf2":
    Var("chromium_trunk") + "/src/third_party/protobuf2" + Var("chromium_revision"),
  "src/third_party/sqlite":
    Var("chromium_trunk") + "/src/third_party/sqlite" + Var("chromium_revision"),
  "src/third_party/tcmalloc/chromium":
    Var("chromium_trunk") + "/src/third_party/tcmalloc/chromium"
      + Var("chromium_revision"),
  "src/third_party/yasm":
    Var("chromium_trunk") + "/src/third_party/yasm" + Var("chromium_revision"),
  "src/third_party/zlib":
    Var("chromium_trunk") + "/src/third_party/zlib" + Var("chromium_revision"),
  "src/webkit":
    Var("chromium_trunk") + "/src/webkit" + Var("chromium_revision"),

  # The chromium dependencies that we also depend on.
  # TODO(bmcquade): see if we can reduce this set of dependencies.
  "src/googleurl": From(Var("chromium_deps_root")),
  "src/sdch/open-vcdiff": From(Var("chromium_deps_root")),
  "src/testing/gtest": From(Var("chromium_deps_root")),
  "src/third_party/angle": From(Var("chromium_deps_root")),
  "src/third_party/ffmpeg": From(Var("chromium_deps_root")),
  "src/third_party/icu": From(Var("chromium_deps_root")),
  "src/third_party/libvpx/include": From(Var("chromium_deps_root")),
  "src/third_party/libvpx/lib": From(Var("chromium_deps_root")),
  "src/third_party/ots": From(Var("chromium_deps_root")),
  "src/third_party/ppapi": From(Var("chromium_deps_root")),
  "src/third_party/protobuf2/src": From(Var("chromium_deps_root")),
  "src/third_party/skia/src": From(Var("chromium_deps_root")),
  "src/third_party/skia/include": From(Var("chromium_deps_root")),
  "src/third_party/WebKit": From(Var("chromium_deps_root")),
  "src/third_party/WebKit/JavaScriptCore": From(Var("chromium_deps_root")),
  "src/third_party/WebKit/WebCore": From(Var("chromium_deps_root")),
  "src/third_party/WebKit/WebKit/chromium": From(Var("chromium_deps_root")),
  "src/third_party/WebKit/WebKitTools/DumpRenderTree":
    From(Var("chromium_deps_root")),
  "src/tools/gyp": From(Var("chromium_deps_root")),
  "src/v8": From(Var("chromium_deps_root")),
}


deps_os = {
  "win": {
    "src/third_party/cygwin": From(Var("chromium_deps_root")),
    "src/third_party/python_24": From(Var("chromium_deps_root")),
    "src/third_party/nss": From(Var("chromium_deps_root")),
  },
  "mac": {
    "src/third_party/yasm/source/patched-yasm": From(Var("chromium_deps_root")),
  },
  "unix": {
    "src/third_party/yasm/source/patched-yasm": From(Var("chromium_deps_root")),
  },
}


include_rules = [
  # Everybody can use some things.
  "+base",
  "+build",

  # For now, we allow ICU to be included by specifying "unicode/...", although
  # this should probably change.
  "+unicode",
  "+testing",
]


# checkdeps.py shouldn't check include paths for files in these dirs:
skip_child_includes = [
   "sdch",
   "skia",
   "testing",
   "third_party",
   "v8",
]


hooks = [
  {
    # A change to a .gyp, .gypi, or to GYP itself should run the generator.
    "pattern": ".",
    "action": ["python", "src/build/gyp_chromium"],
  },
  {
    # Workaround XCode dependecies problem.
    # TODO(bradnelson): remove this when fixed.
    "pattern": ".",
    "action": ["python",
               "src/build/mac/clobber_generated_headers.py"],
  },
]

