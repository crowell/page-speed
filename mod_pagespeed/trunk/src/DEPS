# Copyright 2009 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

vars = {
  "chromium_trunk": "http://src.chromium.org/svn/trunk",
  "chromium_revision": "@50096",
  "chromium_deps_root": "src/third_party/chromium_deps",
  "libpagespeed_trunk": "http://page-speed.googlecode.com/svn/lib/trunk",
  "libpagespeed_revision": "@head",
  "libpagespeed_deps_root": "src/third_party/libpagespeed_deps",
  "mod_spdy_trunk": "http://mod-spdy.googlecode.com/svn/trunk",
  "mod_spdy_revision": "@head",
  "mod_spdy_deps_root": "src/third_party/mod_spdy_deps",
  "serf_src": "http://serf.googlecode.com/svn/tags/0.3.1",
  "serf_revision": "@head",
  "apr_src": "http://svn.apache.org/repos/asf/apr/apr/tags/1.4.2",
  "apr_revision": "@head",
  "aprutil_src": "http://svn.apache.org/repos/asf/apr/apr-util/tags/1.3.9",
  "aprutil_revision": "@head",
  "apache_httpd_src": "http://svn.apache.org/repos/asf/httpd/httpd/tags/2.2.15",
  "apache_httpd_revision": "@head",
  "instaweb_trunk": "http://instaweb.googlecode.com/svn/trunk",
  "instaweb_revision": "@32",
  "instaweb_deps_root": "src/third_party/instaweb_deps",
}

deps = {
  # Fetch dependent DEPS so we can sync our other dependencies
  # relative to them.
  Var("libpagespeed_deps_root"):
    File(Var("libpagespeed_trunk") + "/src/DEPS" +
      Var("libpagespeed_revision")),

  Var("chromium_deps_root"):
    File(Var("chromium_trunk") + "/src/DEPS" + Var("chromium_revision")),

  Var("mod_spdy_deps_root"):
    File(Var("mod_spdy_trunk") + "/src/DEPS" + Var("mod_spdy_revision")),

  Var("instaweb_deps_root"):
    File(Var("instaweb_trunk") + "/src/DEPS" + Var("instaweb_revision")),

  "src/third_party/apache":
    Var("mod_spdy_trunk") + "/src/third_party/apache" +
    Var("mod_spdy_revision"),

  "src/third_party/chromium/src/net/tools":
     Var("instaweb_trunk") + "/src/third_party/chromium/src/net/tools" +
     Var("instaweb_revision"),

  "src/third_party/instaweb/src/net/instaweb":
    Var("instaweb_trunk") + "/src/net/instaweb" + Var("instaweb_revision"),

  "src/third_party/instaweb/src/third_party/base64":
    Var("instaweb_trunk") + "/src/third_party/base64" +
    Var("instaweb_revision"),

  "src/third_party/mod_spdy/src/mod_spdy/apache":
    Var("mod_spdy_trunk") + "/src/mod_spdy/apache" + Var("mod_spdy_revision"),

  "src/third_party/opencv":
    Var("instaweb_trunk") + "/src/third_party/opencv" +
    Var("instaweb_revision"),

  "src/third_party/serf/src":
    Var("serf_src") + Var("serf_revision"),

  "src/build/internal": From(Var("libpagespeed_deps_root")),
  "src/build/linux": From(Var("libpagespeed_deps_root")),
  "src/build/mac": From(Var("libpagespeed_deps_root")),
  "src/build/util": From(Var("libpagespeed_deps_root")),
  "src/build/win": From(Var("libpagespeed_deps_root")),
  "src/testing": From(Var("libpagespeed_deps_root")),
  "src/third_party/libjpeg": From(Var("libpagespeed_deps_root")),
  "src/third_party/libpng": From(Var("libpagespeed_deps_root")),
  "src/third_party/protobuf2": From(Var("libpagespeed_deps_root")),
  "src/third_party/zlib": From(Var("libpagespeed_deps_root")),
  "src/third_party/chromium/src/base": From(Var("libpagespeed_deps_root")),
  "src/third_party/chromium/src/build": From(Var("libpagespeed_deps_root")),
  "src/third_party/chromium/src/net/base": From(Var("libpagespeed_deps_root")),
  "src/tools/data_pack": From(Var("libpagespeed_deps_root")),
  "src/tools/grit": From(Var("libpagespeed_deps_root")),

  "src/base": From(Var("instaweb_deps_root")),
  "src/build/temp_gyp": From(Var("instaweb_deps_root")),
  "src/googleurl_noicu": From(Var("instaweb_deps_root")),
  "src/third_party/chromium/src/net/tools/dump_cache":
    From(Var("instaweb_deps_root")),
  "src/third_party/libpagespeed/src/build": From(Var("instaweb_deps_root")),
  "src/third_party/libpagespeed/src/build/internal":
    From(Var("instaweb_deps_root")),
  "src/third_party/libpagespeed/src/pagespeed/core":
    From(Var("instaweb_deps_root")),
  "src/third_party/libpagespeed/src/pagespeed/image_compression":
    From(Var("instaweb_deps_root")),
  "src/third_party/libpagespeed/src/pagespeed/proto":
    From(Var("instaweb_deps_root")),
  "src/third_party/libpagespeed/src/third_party":
    From(Var("instaweb_deps_root")),
  "src/third_party/opencv/src/opencv/src": From(Var("instaweb_deps_root")),
  "src/third_party/opencv/src/opencv/include": From(Var("instaweb_deps_root")),
  "src/third_party/opencv/src/opencv/3rdparty/lapack":
    From(Var("instaweb_deps_root")),
  "src/third_party/opencv/src/opencv/3rdparty/flann":
    From(Var("instaweb_deps_root")),
  "src/third_party/opencv/src/opencv/3rdparty/include":
    From(Var("instaweb_deps_root")),

  "src/googleurl": From(Var("chromium_deps_root")),
  "src/testing/gtest": From(Var("chromium_deps_root")),
  "src/third_party/protobuf2/src": From(Var("chromium_deps_root")),
  "src/tools/gyp": From(Var("chromium_deps_root")),

  "src/third_party/apache/apr/src": From(Var("mod_spdy_deps_root")),
  "src/third_party/apache/aprutil/src": From(Var("mod_spdy_deps_root")),
  "src/third_party/apache/httpd/src/include": From(Var("mod_spdy_deps_root")),
  "src/third_party/apache/httpd/src/os": From(Var("mod_spdy_deps_root")),
}


deps_os = {
  "win": {
    "src/third_party/cygwin": From(Var("chromium_deps_root")),
    "src/third_party/python_24": From(Var("chromium_deps_root")),
  },
  "mac": {
  },
  "unix": {
  },
}


# include_rules = [
#   # Everybody can use some things.
#   "+base",
#   "+build",
# ]


# # checkdeps.py shouldn't check include paths for files in these dirs:
# skip_child_includes = [
#    "testing",
# ]


hooks = [
  {
    # A change to a .gyp, .gypi, or to GYP itself should run the generator.
    "pattern": ".",
    "action": ["python", "src/build/gyp_chromium"],
  },
]
